// Generated by data binding compiler. Do not edit!
package com.webkype.happiroo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.webkype.happiroo.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AddressItmBinding extends ViewDataBinding {
  @NonNull
  public final TextView addressItemContactNo;

  @NonNull
  public final TextView addressItemFullAddress;

  @NonNull
  public final RelativeLayout addressItemRelative;

  @NonNull
  public final TextView addressItemType;

  @NonNull
  public final TextView addressItemUser;

  @NonNull
  public final ImageView checkedAddress;

  @NonNull
  public final TextView editAddressItem;

  protected AddressItmBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView addressItemContactNo, TextView addressItemFullAddress,
      RelativeLayout addressItemRelative, TextView addressItemType, TextView addressItemUser,
      ImageView checkedAddress, TextView editAddressItem) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addressItemContactNo = addressItemContactNo;
    this.addressItemFullAddress = addressItemFullAddress;
    this.addressItemRelative = addressItemRelative;
    this.addressItemType = addressItemType;
    this.addressItemUser = addressItemUser;
    this.checkedAddress = checkedAddress;
    this.editAddressItem = editAddressItem;
  }

  @NonNull
  public static AddressItmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.address_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AddressItmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AddressItmBinding>inflateInternal(inflater, R.layout.address_item, root, attachToRoot, component);
  }

  @NonNull
  public static AddressItmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.address_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AddressItmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AddressItmBinding>inflateInternal(inflater, R.layout.address_item, null, false, component);
  }

  public static AddressItmBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AddressItmBinding bind(@NonNull View view, @Nullable Object component) {
    return (AddressItmBinding)bind(component, view, R.layout.address_item);
  }
}
